ST1 # CMD # DESC # COND # ERR # errStr # Flags # ST2
# retVal = bs_lmodInit(&lobj, false, false, false, NULL, iMObj) # Initialize the lmod object. # retVal # retVal # ec2ES(retVal) # 0 # #
# retVal = bs_lmodFin(&lobj, iMObj) # Finalise the lmod object. # retVal # retVal # ec2ES(retVal) # 0 # #
# retVal = bs_lmodInit(&lobj , true, false, false, NULL, iMObj) # Initialize the lmod object with syslog. # retVal # retVal # ec2ES(retVal) # 0 # #
# retVal = bs_lmodFin(&lobj, iMObj) # Finalise the lmod object with syslog. # retVal # retVal # ec2ES(retVal) # 0 # #
# retVal = bs_lmodInit(&lobj, false, true, true, NULL, iMObj) # Initialize the lmod object with quite and verbose flag. # retVal # retVal # ec2ES(retVal) # 0 # #
# retVal = bs_lmodFin(&lobj, iMObj) # Finalise the lmod object with quite and verbose flag set. # retVal # retVal # ec2ES(retVal) # 0 # #
# retVal = bs_lmodInit(&lobj, true, true, true, NULL, iMObj) # Initialize the lmod object with quite, verbose and syslog flag set. # retVal # retVal # ec2ES(retVal) # 0 # #
# retVal = bs_lmodFin(&lobj, iMObj) # Finalise the lmod object with all flags set. # retVal # retVal # ec2ES(retVal) # 0 # #
# retVal = bs_fmodInit(&rdwrF, iMObj) # Initialize a file object. # retVal # retVal # ec2ES(retVal) # 0 # #
# retVal = bs_fCreate(rdwrF, TEST_FILE, 0755) # Finalise the fmod object. # retVal # retVal # ec2ES(retVal) # 0 # #
# retVal = bs_lmodInit(&lobj, true, true, true, rdwrF, iMObj) # Initialize the lmod object with all flags and a file object. # retVal # retVal # ec2ES(retVal) # 0 # #
bs_log(lobj, LVL_INFO, PO_LOG, "%s", "\nTest info message VQ") # # # # # # # #
bs_log(lobj, LVL_DEBUG, PO_LOG, "%s", "\nTest debug message VQ") # # # # # # # #
bs_log(lobj, LVL_ERROR, PO_LOG, "%s", "\nTest err message VQ") # # # # # # # #
bs_unsetVerbose(lobj) # # # # # # # #
bs_log(lobj, LVL_INFO, PO_LOG, "%s", "\nTest info message NVQ") # # # # # # # #
bs_log(lobj, LVL_DEBUG, PO_LOG, "%s", "\nTest debug message NVQ") # # # # # # # #
bs_log(lobj, LVL_ERROR, PO_LOG, "%s", "\nTest err message NVQ") # # # # # # # #
bs_setVerbose(lobj) # # # # # # # #
bs_unsetQuite(lobj) # # # # # # # #
bs_log(lobj, LVL_INFO, PO_LOG, "%s", "\nTest info message VNQ") # # # # # # # #
bs_log(lobj, LVL_DEBUG, PO_LOG, "%s", "\nTest debug message VNQ") # # # # # # # #
bs_log(lobj, LVL_ERROR, PO_LOG, "%s", "\nTest err message VNQ") # # # # # # # #
bs_setQuite(lobj) # # # # # # # #
bs_unsetVerbose(lobj) # # # # # # # #
bs_unsetQuite(lobj) # # # # # # # #
bs_log(lobj, LVL_INFO, PO_LOG, "%s", "\nTest info message NVNQ") # # # # # # # #
bs_log(lobj, LVL_DEBUG, PO_LOG, "%s", "\nTest debug message NVNQ") # # # # # # # #
bs_log(lobj, LVL_ERROR, PO_LOG, "%s", "\nTest err message NVNQ") # # # # # # # #
bs_setVerbose(lobj) # # # # # # # #
bs_setQuite(lobj) # # # # # # # #
bs_log(lobj, LVL_INFO, PF_LOG, "%s", "\nTest info message VQ") # # # # # # # #
bs_log(lobj, LVL_DEBUG, PF_LOG, "%s", "\nTest debug message VQ") # # # # # # # #
bs_log(lobj, LVL_ERROR, PF_LOG, "%s", "\nTest err message VQ") # # # # # # # #
bs_unsetVerbose(lobj) # # # # # # # #
bs_log(lobj, LVL_INFO, PF_LOG, "%s", "\nTest info message NVQ") # # # # # # # #
bs_log(lobj, LVL_DEBUG, PF_LOG, "%s", "\nTest debug message NVQ") # # # # # # # #
bs_log(lobj, LVL_ERROR, PF_LOG, "%s", "\nTest err message NVQ") # # # # # # # #
bs_setVerbose(lobj) # # # # # # # #
bs_unsetQuite(lobj) # # # # # # # #
bs_log(lobj, LVL_INFO, PF_LOG, "%s", "\nTest info message VNQ") # # # # # # # #
bs_log(lobj, LVL_DEBUG, PF_LOG, "%s", "\nTest debug message VNQ") # # # # # # # #
bs_log(lobj, LVL_ERROR, PF_LOG, "%s", "\nTest err message VNQ") # # # # # # # #
bs_setQuite(lobj) # # # # # # # #
bs_unsetVerbose(lobj) # # # # # # # #
bs_unsetQuite(lobj) # # # # # # # #
bs_log(lobj, LVL_INFO, PF_LOG, "%s", "\nTest info message NVNQ") # # # # # # # #
bs_log(lobj, LVL_DEBUG, PF_LOG, "%s", "\nTest debug message NVNQ") # # # # # # # #
bs_log(lobj, LVL_ERROR, PF_LOG, "%s", "\nTest err message NVNQ") # # # # # # # #
# retVal = bs_lmodFin(&lobj, iMObj) # Finalise the lmod object with all flags and the file object. # retVal # retVal # ec2ES(retVal) # 0 # #
